#ifndef ERREUR_VERIFIER_H
#define ERREUR_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef ERREUR_READER_H
#include "erreur_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int erreurs_Erreur_verify_table(flatcc_table_verifier_descriptor_t *td);

static int erreurs_Erreur_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* code */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* contexte */)) return ret;
    return flatcc_verify_ok;
}

static inline int erreurs_Erreur_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, erreurs_Erreur_identifier, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, erreurs_Erreur_identifier, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, erreurs_Erreur_type_identifier, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, erreurs_Erreur_type_identifier, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &erreurs_Erreur_verify_table);
}

static inline int erreurs_Erreur_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &erreurs_Erreur_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* ERREUR_VERIFIER_H */

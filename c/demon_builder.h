#ifndef DEMON_BUILDER_H
#define DEMON_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef DEMON_READER_H
#include "demon_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

#define __demon_NetworkEventType_formal_args , demon_NetworkEventType_enum_t v0
#define __demon_NetworkEventType_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, demon_NetworkEventType, demon_NetworkEventType_enum_t)

typedef flatbuffers_union_ref_t demon_Event_union_ref_t;
typedef flatbuffers_union_vec_ref_t demon_Event_union_vec_ref_t;
static demon_Event_union_ref_t demon_Event_clone(flatbuffers_builder_t *B, demon_Event_union_t t);

static const flatbuffers_voffset_t __demon_Command_required[] = { 0 };
typedef flatbuffers_ref_t demon_Command_ref_t;
static demon_Command_ref_t demon_Command_clone(flatbuffers_builder_t *B, demon_Command_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_Command, 5)

static const flatbuffers_voffset_t __demon_InotifyEvent_required[] = { 0 };
typedef flatbuffers_ref_t demon_InotifyEvent_ref_t;
static demon_InotifyEvent_ref_t demon_InotifyEvent_clone(flatbuffers_builder_t *B, demon_InotifyEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_InotifyEvent, 3)

static const flatbuffers_voffset_t __demon_CloneEvent_required[] = { 0 };
typedef flatbuffers_ref_t demon_CloneEvent_ref_t;
static demon_CloneEvent_ref_t demon_CloneEvent_clone(flatbuffers_builder_t *B, demon_CloneEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_CloneEvent, 6)

static const flatbuffers_voffset_t __demon_WatchSocketEvent_required[] = { 0 };
typedef flatbuffers_ref_t demon_WatchSocketEvent_ref_t;
static demon_WatchSocketEvent_ref_t demon_WatchSocketEvent_clone(flatbuffers_builder_t *B, demon_WatchSocketEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_WatchSocketEvent, 0)

static const flatbuffers_voffset_t __demon_ChildErrorEvent_required[] = { 0 };
typedef flatbuffers_ref_t demon_ChildErrorEvent_ref_t;
static demon_ChildErrorEvent_ref_t demon_ChildErrorEvent_clone(flatbuffers_builder_t *B, demon_ChildErrorEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_ChildErrorEvent, 3)

static const flatbuffers_voffset_t __demon_CloneErrorEvent_required[] = { 0 };
typedef flatbuffers_ref_t demon_CloneErrorEvent_ref_t;
static demon_CloneErrorEvent_ref_t demon_CloneErrorEvent_clone(flatbuffers_builder_t *B, demon_CloneErrorEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_CloneErrorEvent, 0)

static const flatbuffers_voffset_t __demon_FileCreationEvent_required[] = { 0 };
typedef flatbuffers_ref_t demon_FileCreationEvent_ref_t;
static demon_FileCreationEvent_ref_t demon_FileCreationEvent_clone(flatbuffers_builder_t *B, demon_FileCreationEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_FileCreationEvent, 3)

static const flatbuffers_voffset_t __demon_Message_required[] = { 0 };
typedef flatbuffers_ref_t demon_Message_ref_t;
static demon_Message_ref_t demon_Message_clone(flatbuffers_builder_t *B, demon_Message_table_t t);
__flatbuffers_build_table(flatbuffers_, demon_Message, 3)

#define __demon_Command_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, flatbuffers_string_ref_t v2, flatbuffers_string_ref_t v3, demon_NetworkEventType_enum_t v4
#define __demon_Command_call_args ,\
  v0, v1, v2, v3, v4
static inline demon_Command_ref_t demon_Command_create(flatbuffers_builder_t *B __demon_Command_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_Command, demon_Command_file_identifier, demon_Command_type_identifier)

#define __demon_InotifyEvent_formal_args , flatbuffers_string_ref_t v0, int32_t v1, int32_t v2
#define __demon_InotifyEvent_call_args , v0, v1, v2
static inline demon_InotifyEvent_ref_t demon_InotifyEvent_create(flatbuffers_builder_t *B __demon_InotifyEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_InotifyEvent, demon_InotifyEvent_file_identifier, demon_InotifyEvent_type_identifier)

#define __demon_CloneEvent_formal_args ,\
  int32_t v0, flatbuffers_string_ref_t v1, int32_t v2, flatbuffers_string_ref_t v3, flatbuffers_string_ref_t v4, int32_t v5
#define __demon_CloneEvent_call_args ,\
  v0, v1, v2, v3, v4, v5
static inline demon_CloneEvent_ref_t demon_CloneEvent_create(flatbuffers_builder_t *B __demon_CloneEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_CloneEvent, demon_CloneEvent_file_identifier, demon_CloneEvent_type_identifier)

#define __demon_WatchSocketEvent_formal_args 
#define __demon_WatchSocketEvent_call_args 
static inline demon_WatchSocketEvent_ref_t demon_WatchSocketEvent_create(flatbuffers_builder_t *B __demon_WatchSocketEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_WatchSocketEvent, demon_WatchSocketEvent_file_identifier, demon_WatchSocketEvent_type_identifier)

#define __demon_ChildErrorEvent_formal_args , int32_t v0, demon_Command_vec_ref_t v1, int32_t v2
#define __demon_ChildErrorEvent_call_args , v0, v1, v2
static inline demon_ChildErrorEvent_ref_t demon_ChildErrorEvent_create(flatbuffers_builder_t *B __demon_ChildErrorEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_ChildErrorEvent, demon_ChildErrorEvent_file_identifier, demon_ChildErrorEvent_type_identifier)

#define __demon_CloneErrorEvent_formal_args 
#define __demon_CloneErrorEvent_call_args 
static inline demon_CloneErrorEvent_ref_t demon_CloneErrorEvent_create(flatbuffers_builder_t *B __demon_CloneErrorEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_CloneErrorEvent, demon_CloneErrorEvent_file_identifier, demon_CloneErrorEvent_type_identifier)

#define __demon_FileCreationEvent_formal_args , flatbuffers_string_ref_t v0, int32_t v1, int32_t v2
#define __demon_FileCreationEvent_call_args , v0, v1, v2
static inline demon_FileCreationEvent_ref_t demon_FileCreationEvent_create(flatbuffers_builder_t *B __demon_FileCreationEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_FileCreationEvent, demon_FileCreationEvent_file_identifier, demon_FileCreationEvent_type_identifier)

#define __demon_Message_formal_args , uint8_t v0, demon_Event_union_ref_t v2
#define __demon_Message_call_args , v0, v2
static inline demon_Message_ref_t demon_Message_create(flatbuffers_builder_t *B __demon_Message_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, demon_Message, demon_Message_file_identifier, demon_Message_type_identifier)

static inline demon_Event_union_ref_t demon_Event_as_NONE(void)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_NONE; uref.value = 0; return uref; }
static inline demon_Event_union_ref_t demon_Event_as_InotifyEvent(demon_InotifyEvent_ref_t ref)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_InotifyEvent; uref.value = ref; return uref; }
static inline demon_Event_union_ref_t demon_Event_as_CloneEvent(demon_CloneEvent_ref_t ref)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_CloneEvent; uref.value = ref; return uref; }
static inline demon_Event_union_ref_t demon_Event_as_WatchSocketEvent(demon_WatchSocketEvent_ref_t ref)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_WatchSocketEvent; uref.value = ref; return uref; }
static inline demon_Event_union_ref_t demon_Event_as_ChildErrorEvent(demon_ChildErrorEvent_ref_t ref)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_ChildErrorEvent; uref.value = ref; return uref; }
static inline demon_Event_union_ref_t demon_Event_as_CloneErrorEvent(demon_CloneErrorEvent_ref_t ref)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_CloneErrorEvent; uref.value = ref; return uref; }
static inline demon_Event_union_ref_t demon_Event_as_FileCreationEvent(demon_FileCreationEvent_ref_t ref)
{ demon_Event_union_ref_t uref; uref.type = demon_Event_FileCreationEvent; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, demon_Event)

static demon_Event_union_ref_t demon_Event_clone(flatbuffers_builder_t *B, demon_Event_union_t u)
{
    switch (u.type) {
    case 1: return demon_Event_as_InotifyEvent(demon_InotifyEvent_clone(B, (demon_InotifyEvent_table_t)u.value));
    case 2: return demon_Event_as_CloneEvent(demon_CloneEvent_clone(B, (demon_CloneEvent_table_t)u.value));
    case 3: return demon_Event_as_WatchSocketEvent(demon_WatchSocketEvent_clone(B, (demon_WatchSocketEvent_table_t)u.value));
    case 4: return demon_Event_as_ChildErrorEvent(demon_ChildErrorEvent_clone(B, (demon_ChildErrorEvent_table_t)u.value));
    case 5: return demon_Event_as_CloneErrorEvent(demon_CloneErrorEvent_clone(B, (demon_CloneErrorEvent_table_t)u.value));
    case 6: return demon_Event_as_FileCreationEvent(demon_FileCreationEvent_clone(B, (demon_FileCreationEvent_table_t)u.value));
    default: return demon_Event_as_NONE();
    }
}

__flatbuffers_build_string_field(0, flatbuffers_, demon_Command_command_name, demon_Command)
__flatbuffers_build_string_field(1, flatbuffers_, demon_Command_arg1, demon_Command)
__flatbuffers_build_string_field(2, flatbuffers_, demon_Command_arg2, demon_Command)
__flatbuffers_build_string_field(3, flatbuffers_, demon_Command_arg3, demon_Command)
__flatbuffers_build_scalar_field(4, flatbuffers_, demon_Command_type, demon_NetworkEventType, demon_NetworkEventType_enum_t, 1, 1, INT8_C(0), demon_Command)

static inline demon_Command_ref_t demon_Command_create(flatbuffers_builder_t *B __demon_Command_formal_args)
{
    if (demon_Command_start(B)
        || demon_Command_command_name_add(B, v0)
        || demon_Command_arg1_add(B, v1)
        || demon_Command_arg2_add(B, v2)
        || demon_Command_arg3_add(B, v3)
        || demon_Command_type_add(B, v4)) {
        return 0;
    }
    return demon_Command_end(B);
}

static demon_Command_ref_t demon_Command_clone(flatbuffers_builder_t *B, demon_Command_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_Command_start(B)
        || demon_Command_command_name_pick(B, t)
        || demon_Command_arg1_pick(B, t)
        || demon_Command_arg2_pick(B, t)
        || demon_Command_arg3_pick(B, t)
        || demon_Command_type_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_Command_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, demon_InotifyEvent_pathname, demon_InotifyEvent)
__flatbuffers_build_scalar_field(1, flatbuffers_, demon_InotifyEvent_flags, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_InotifyEvent)
__flatbuffers_build_scalar_field(2, flatbuffers_, demon_InotifyEvent_size_target, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_InotifyEvent)

static inline demon_InotifyEvent_ref_t demon_InotifyEvent_create(flatbuffers_builder_t *B __demon_InotifyEvent_formal_args)
{
    if (demon_InotifyEvent_start(B)
        || demon_InotifyEvent_pathname_add(B, v0)
        || demon_InotifyEvent_flags_add(B, v1)
        || demon_InotifyEvent_size_target_add(B, v2)) {
        return 0;
    }
    return demon_InotifyEvent_end(B);
}

static demon_InotifyEvent_ref_t demon_InotifyEvent_clone(flatbuffers_builder_t *B, demon_InotifyEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_InotifyEvent_start(B)
        || demon_InotifyEvent_pathname_pick(B, t)
        || demon_InotifyEvent_flags_pick(B, t)
        || demon_InotifyEvent_size_target_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_InotifyEvent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, demon_CloneEvent_stack_size, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_CloneEvent)
__flatbuffers_build_string_field(1, flatbuffers_, demon_CloneEvent_pathname, demon_CloneEvent)
__flatbuffers_build_scalar_field(2, flatbuffers_, demon_CloneEvent_flags, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_CloneEvent)
__flatbuffers_build_string_field(3, flatbuffers_, demon_CloneEvent_args, demon_CloneEvent)
__flatbuffers_build_string_field(4, flatbuffers_, demon_CloneEvent_envp, demon_CloneEvent)
__flatbuffers_build_scalar_field(5, flatbuffers_, demon_CloneEvent_group_id, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_CloneEvent)

static inline demon_CloneEvent_ref_t demon_CloneEvent_create(flatbuffers_builder_t *B __demon_CloneEvent_formal_args)
{
    if (demon_CloneEvent_start(B)
        || demon_CloneEvent_stack_size_add(B, v0)
        || demon_CloneEvent_pathname_add(B, v1)
        || demon_CloneEvent_flags_add(B, v2)
        || demon_CloneEvent_args_add(B, v3)
        || demon_CloneEvent_envp_add(B, v4)
        || demon_CloneEvent_group_id_add(B, v5)) {
        return 0;
    }
    return demon_CloneEvent_end(B);
}

static demon_CloneEvent_ref_t demon_CloneEvent_clone(flatbuffers_builder_t *B, demon_CloneEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_CloneEvent_start(B)
        || demon_CloneEvent_stack_size_pick(B, t)
        || demon_CloneEvent_pathname_pick(B, t)
        || demon_CloneEvent_flags_pick(B, t)
        || demon_CloneEvent_args_pick(B, t)
        || demon_CloneEvent_envp_pick(B, t)
        || demon_CloneEvent_group_id_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_CloneEvent_end(B));
}


static inline demon_WatchSocketEvent_ref_t demon_WatchSocketEvent_create(flatbuffers_builder_t *B __demon_WatchSocketEvent_formal_args)
{
    if (demon_WatchSocketEvent_start(B)) {
        return 0;
    }
    return demon_WatchSocketEvent_end(B);
}

static demon_WatchSocketEvent_ref_t demon_WatchSocketEvent_clone(flatbuffers_builder_t *B, demon_WatchSocketEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_WatchSocketEvent_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_WatchSocketEvent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, demon_ChildErrorEvent_pid, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_ChildErrorEvent)
__flatbuffers_build_table_vector_field(1, flatbuffers_, demon_ChildErrorEvent_command, demon_Command, demon_ChildErrorEvent)
__flatbuffers_build_scalar_field(2, flatbuffers_, demon_ChildErrorEvent_group_id, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_ChildErrorEvent)

static inline demon_ChildErrorEvent_ref_t demon_ChildErrorEvent_create(flatbuffers_builder_t *B __demon_ChildErrorEvent_formal_args)
{
    if (demon_ChildErrorEvent_start(B)
        || demon_ChildErrorEvent_pid_add(B, v0)
        || demon_ChildErrorEvent_command_add(B, v1)
        || demon_ChildErrorEvent_group_id_add(B, v2)) {
        return 0;
    }
    return demon_ChildErrorEvent_end(B);
}

static demon_ChildErrorEvent_ref_t demon_ChildErrorEvent_clone(flatbuffers_builder_t *B, demon_ChildErrorEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_ChildErrorEvent_start(B)
        || demon_ChildErrorEvent_pid_pick(B, t)
        || demon_ChildErrorEvent_command_pick(B, t)
        || demon_ChildErrorEvent_group_id_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_ChildErrorEvent_end(B));
}


static inline demon_CloneErrorEvent_ref_t demon_CloneErrorEvent_create(flatbuffers_builder_t *B __demon_CloneErrorEvent_formal_args)
{
    if (demon_CloneErrorEvent_start(B)) {
        return 0;
    }
    return demon_CloneErrorEvent_end(B);
}

static demon_CloneErrorEvent_ref_t demon_CloneErrorEvent_clone(flatbuffers_builder_t *B, demon_CloneErrorEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_CloneErrorEvent_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_CloneErrorEvent_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, demon_FileCreationEvent_filepath, demon_FileCreationEvent)
__flatbuffers_build_scalar_field(1, flatbuffers_, demon_FileCreationEvent_group_id, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_FileCreationEvent)
__flatbuffers_build_scalar_field(2, flatbuffers_, demon_FileCreationEvent_pid, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), demon_FileCreationEvent)

static inline demon_FileCreationEvent_ref_t demon_FileCreationEvent_create(flatbuffers_builder_t *B __demon_FileCreationEvent_formal_args)
{
    if (demon_FileCreationEvent_start(B)
        || demon_FileCreationEvent_filepath_add(B, v0)
        || demon_FileCreationEvent_group_id_add(B, v1)
        || demon_FileCreationEvent_pid_add(B, v2)) {
        return 0;
    }
    return demon_FileCreationEvent_end(B);
}

static demon_FileCreationEvent_ref_t demon_FileCreationEvent_clone(flatbuffers_builder_t *B, demon_FileCreationEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_FileCreationEvent_start(B)
        || demon_FileCreationEvent_filepath_pick(B, t)
        || demon_FileCreationEvent_group_id_pick(B, t)
        || demon_FileCreationEvent_pid_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_FileCreationEvent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, demon_Message_code, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), demon_Message)
__flatbuffers_build_union_field(2, flatbuffers_, demon_Message_events, demon_Event, demon_Message)
__flatbuffers_build_union_table_value_field(flatbuffers_, demon_Message_events, demon_Event, InotifyEvent, demon_InotifyEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, demon_Message_events, demon_Event, CloneEvent, demon_CloneEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, demon_Message_events, demon_Event, WatchSocketEvent, demon_WatchSocketEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, demon_Message_events, demon_Event, ChildErrorEvent, demon_ChildErrorEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, demon_Message_events, demon_Event, CloneErrorEvent, demon_CloneErrorEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, demon_Message_events, demon_Event, FileCreationEvent, demon_FileCreationEvent)

static inline demon_Message_ref_t demon_Message_create(flatbuffers_builder_t *B __demon_Message_formal_args)
{
    if (demon_Message_start(B)
        || demon_Message_events_add_value(B, v2)
        || demon_Message_code_add(B, v0)
        || demon_Message_events_add_type(B, v2.type)) {
        return 0;
    }
    return demon_Message_end(B);
}

static demon_Message_ref_t demon_Message_clone(flatbuffers_builder_t *B, demon_Message_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (demon_Message_start(B)
        || demon_Message_events_pick(B, t)
        || demon_Message_code_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, demon_Message_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* DEMON_BUILDER_H */

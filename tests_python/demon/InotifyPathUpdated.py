# automatically generated by the FlatBuffers compiler, do not modify

# namespace: demon

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class InotifyPathUpdated(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = InotifyPathUpdated()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsInotifyPathUpdated(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # InotifyPathUpdated
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # InotifyPathUpdated
    def Path(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # InotifyPathUpdated
    def TriggerEvents(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # InotifyPathUpdated
    def Size(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # InotifyPathUpdated
    def SizeLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def InotifyPathUpdatedStart(builder):
    builder.StartObject(4)

def Start(builder):
    InotifyPathUpdatedStart(builder)

def InotifyPathUpdatedAddPath(builder, path):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(path), 0)

def AddPath(builder, path):
    InotifyPathUpdatedAddPath(builder, path)

def InotifyPathUpdatedAddTriggerEvents(builder, triggerEvents):
    builder.PrependInt8Slot(1, triggerEvents, 0)

def AddTriggerEvents(builder, triggerEvents):
    InotifyPathUpdatedAddTriggerEvents(builder, triggerEvents)

def InotifyPathUpdatedAddSize(builder, size):
    builder.PrependUint32Slot(2, size, 0)

def AddSize(builder, size):
    InotifyPathUpdatedAddSize(builder, size)

def InotifyPathUpdatedAddSizeLimit(builder, sizeLimit):
    builder.PrependUint32Slot(3, sizeLimit, 0)

def AddSizeLimit(builder, sizeLimit):
    InotifyPathUpdatedAddSizeLimit(builder, sizeLimit)

def InotifyPathUpdatedEnd(builder):
    return builder.EndObject()

def End(builder):
    return InotifyPathUpdatedEnd(builder)
